<taskgraph>
<task>
  <name>delay_seconds</name>
  <inFunction>delay_seconds</inFunction>
  <calledFunction>delay_ticks_longlong</calledFunction>
</task>
<task>
  <name>delay_milliseconds</name>
  <inFunction>delay_milliseconds</inFunction>
  <calledFunction>delay_ticks_longlong</calledFunction>
</task>
<task>
  <name>delay_microseconds</name>
  <inFunction>delay_microseconds</inFunction>
  <calledFunction>delay_ticks_longlong</calledFunction>
</task>
<task>
  <name>_safe_memcmp</name>
  <inFunction>_safe_memcmp</inFunction>
</task>
<task>
  <name>_safe_memmove</name>
  <inFunction>_safe_memmove</inFunction>
</task>
<task>
  <name>_safe_memset</name>
  <inFunction>_safe_memset</inFunction>
</task>
<task>
  <name>read_reg</name>
  <inFunction>read_reg</inFunction>
</task>
<task>
  <name>write_reg</name>
  <inFunction>write_reg</inFunction>
</task>
<task>
  <name>read_reg8_addr16</name>
  <inFunction>read_reg8_addr16</inFunction>
</task>
<task>
  <name>write_reg8_addr16</name>
  <inFunction>write_reg8_addr16</inFunction>
</task>
<task>
  <name>read_reg16</name>
  <inFunction>read_reg16</inFunction>
</task>
<task>
  <name>write_reg16</name>
  <inFunction>write_reg16</inFunction>
</task>
<task>
  <name>read_reg16_addr8</name>
  <inFunction>read_reg16_addr8</inFunction>
</task>
<task>
  <name>write_reg16_addr8</name>
  <inFunction>write_reg16_addr8</inFunction>
</task>
<task>
  <name>atanl</name>
  <inFunction>atanl</inFunction>
</task>
<task>
  <name>cosl</name>
  <inFunction>cosl</inFunction>
</task>
<task>
  <name>sinl</name>
  <inFunction>sinl</inFunction>
</task>
<task>
  <name>tanl</name>
  <inFunction>tanl</inFunction>
</task>
<task>
  <name>tanhl</name>
  <inFunction>tanhl</inFunction>
</task>
<task>
  <name>frexpl</name>
  <inFunction>frexpl</inFunction>
</task>
<task>
  <name>modfl</name>
  <inFunction>modfl</inFunction>
</task>
<task>
  <name>ceill</name>
  <inFunction>ceill</inFunction>
</task>
<task>
  <name>fabsl</name>
  <inFunction>fabsl</inFunction>
</task>
<task>
  <name>floorl</name>
  <inFunction>floorl</inFunction>
</task>
<task>
  <name>log1pl</name>
  <inFunction>log1pl</inFunction>
</task>
<task>
  <name>expm1l</name>
  <inFunction>expm1l</inFunction>
</task>
<task>
  <name>acosl</name>
  <inFunction>acosl</inFunction>
</task>
<task>
  <name>asinl</name>
  <inFunction>asinl</inFunction>
</task>
<task>
  <name>atan2l</name>
  <inFunction>atan2l</inFunction>
</task>
<task>
  <name>coshl</name>
  <inFunction>coshl</inFunction>
</task>
<task>
  <name>sinhl</name>
  <inFunction>sinhl</inFunction>
</task>
<task>
  <name>expl</name>
  <inFunction>expl</inFunction>
</task>
<task>
  <name>ldexpl</name>
  <inFunction>ldexpl</inFunction>
</task>
<task>
  <name>logl</name>
  <inFunction>logl</inFunction>
</task>
<task>
  <name>log10l</name>
  <inFunction>log10l</inFunction>
</task>
<task>
  <name>log2</name>
  <inFunction>log2</inFunction>
</task>
<task>
  <name>log2f</name>
  <inFunction>log2f</inFunction>
</task>
<task>
  <name>log2l</name>
  <inFunction>log2l</inFunction>
</task>
<task>
  <name>powl</name>
  <inFunction>powl</inFunction>
</task>
<task>
  <name>sqrtl</name>
  <inFunction>sqrtl</inFunction>
</task>
<task>
  <name>fmodl</name>
  <inFunction>fmodl</inFunction>
</task>
<task>
  <name>hypotl</name>
  <inFunction>hypotl</inFunction>
</task>
<task>
  <name>copysignl</name>
  <inFunction>copysignl</inFunction>
</task>
<task>
  <name>nanl</name>
  <inFunction>nanl</inFunction>
</task>
<task>
  <name>ilogbl</name>
  <inFunction>ilogbl</inFunction>
</task>
<task>
  <name>logbl</name>
  <inFunction>logbl</inFunction>
</task>
<task>
  <name>asinhl</name>
  <inFunction>asinhl</inFunction>
</task>
<task>
  <name>cbrtl</name>
  <inFunction>cbrtl</inFunction>
</task>
<task>
  <name>nextafterl</name>
  <inFunction>nextafterl</inFunction>
</task>
<task>
  <name>nexttoward</name>
  <inFunction>nexttoward</inFunction>
</task>
<task>
  <name>nexttowardf</name>
  <inFunction>nexttowardf</inFunction>
</task>
<task>
  <name>nexttowardl</name>
  <inFunction>nexttowardl</inFunction>
</task>
<task>
  <name>rintl</name>
  <inFunction>rintl</inFunction>
</task>
<task>
  <name>scalbnl</name>
  <inFunction>scalbnl</inFunction>
</task>
<task>
  <name>exp2l</name>
  <inFunction>exp2l</inFunction>
</task>
<task>
  <name>scalblnl</name>
  <inFunction>scalblnl</inFunction>
</task>
<task>
  <name>tgammal</name>
  <inFunction>tgammal</inFunction>
</task>
<task>
  <name>nearbyintl</name>
  <inFunction>nearbyintl</inFunction>
</task>
<task>
  <name>lrintl</name>
  <inFunction>lrintl</inFunction>
</task>
<task>
  <name>llrintl</name>
  <inFunction>llrintl</inFunction>
</task>
<task>
  <name>roundl</name>
  <inFunction>roundl</inFunction>
</task>
<task>
  <name>lroundl</name>
  <inFunction>lroundl</inFunction>
</task>
<task>
  <name>llroundl</name>
  <inFunction>llroundl</inFunction>
</task>
<task>
  <name>truncl</name>
  <inFunction>truncl</inFunction>
</task>
<task>
  <name>remquol</name>
  <inFunction>remquol</inFunction>
</task>
<task>
  <name>fdiml</name>
  <inFunction>fdiml</inFunction>
</task>
<task>
  <name>fmaxl</name>
  <inFunction>fmaxl</inFunction>
</task>
<task>
  <name>fminl</name>
  <inFunction>fminl</inFunction>
</task>
<task>
  <name>fmal</name>
  <inFunction>fmal</inFunction>
</task>
<task>
  <name>acoshl</name>
  <inFunction>acoshl</inFunction>
</task>
<task>
  <name>atanhl</name>
  <inFunction>atanhl</inFunction>
</task>
<task>
  <name>remainderl</name>
  <inFunction>remainderl</inFunction>
</task>
<task>
  <name>lgammal</name>
  <inFunction>lgammal</inFunction>
</task>
<task>
  <name>erfl</name>
  <inFunction>erfl</inFunction>
</task>
<task>
  <name>erfcl</name>
  <inFunction>erfcl</inFunction>
</task>
<task>
  <name>showLEDs</name>
  <inFunction>showLEDs</inFunction>
</task>
<task>
  <name>buttonListener</name>
  <inFunction>buttonListener</inFunction>
</task>
<task>
  <name>countNeighbours</name>
  <inFunction>countNeighbours</inFunction>
</task>
<task>
  <name>printMatrix</name>
  <inFunction>printMatrix</inFunction>
  <endOfSeqCalledFunction>printf</endOfSeqCalledFunction>
</task>
<task>
  <name>gameOfLife</name>
  <inFunction>gameOfLife</inFunction>
</task>
<task>
  <name>bytesToBits</name>
  <inFunction>bytesToBits</inFunction>
</task>
<task>
  <name>worker</name>
  <inFunction>worker</inFunction>
</task>
<task>
  <name>inputImage</name>
  <inFunction>inputImage</inFunction>
</task>
<task>
  <name>initialiseBitsArray</name>
  <inFunction>initialiseBitsArray</inFunction>
</task>
<task>
  <name>outputImage</name>
  <inFunction>outputImage</inFunction>
</task>
<task>
  <name>sendBytes</name>
  <inFunction>sendBytes</inFunction>
</task>
<task>
  <name>getXfromCount</name>
  <inFunction>getXfromCount</inFunction>
</task>
<task>
  <name>getYfromCount</name>
  <inFunction>getYfromCount</inFunction>
</task>
<task>
  <name>calculateLiveCells</name>
  <inFunction>calculateLiveCells</inFunction>
</task>
<task>
  <name>DataInStream</name>
  <inFunction>DataInStream</inFunction>
</task>
<task>
  <name>distributor</name>
  <inFunction>distributor</inFunction>
</task>
<task>
  <name>DataOutStream</name>
  <inFunction>DataOutStream</inFunction>
</task>
<task>
  <name>orientation</name>
  <inFunction>orientation</inFunction>
</task>
<task>
  <name>main</name>
  <inFunction>main</inFunction>
</task>
<task>
  <name>_task_i2c_master_0</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>i2c_master</calledFunction>
  <tile>tile[0]</tile>
  <distributed/>
  <inPar/>
</task>
<task>
  <name>_task_orientation_1</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>orientation</calledFunction>
  <tile>tile[0]</tile>
  <core>2</core>
  <inPar/>
</task>
<task>
  <name>_task_DataInStream_2</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>DataInStream</calledFunction>
  <tile>tile[0]</tile>
  <core>3</core>
  <inPar/>
</task>
<task>
  <name>_task_DataOutStream_3</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>DataOutStream</calledFunction>
  <tile>tile[0]</tile>
  <core>4</core>
  <inPar/>
</task>
<task>
  <name>_task_distributor_4</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>distributor</calledFunction>
  <tile>tile[0]</tile>
  <core>5</core>
  <inPar/>
</task>
<task>
  <name>_task_buttonListener_5</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>buttonListener</calledFunction>
  <tile>tile[0]</tile>
  <core>6</core>
  <inPar/>
</task>
<task>
  <name>_task_showLEDs_6</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <calledFunction>showLEDs</calledFunction>
  <tile>tile[0]</tile>
  <core>7</core>
  <inPar/>
</task>
<task>
  <name>_task_7</name>
  <inFunction>main</inFunction>
  <parent>main</parent>
  <core>8</core>
  <inPar/>
</task>
<task>
  <name>_task_worker_8</name>
  <inFunction>main</inFunction>
  <parent>_task_7</parent>
  <calledFunction>worker</calledFunction>
  <tile>tile[1]</tile>
  <core>9</core>
  <inPar/>
</task>
<task>
  <name>_task_worker_9</name>
  <inFunction>main</inFunction>
  <parent>_task_7</parent>
  <calledFunction>worker</calledFunction>
  <tile>tile[1]</tile>
  <core>10</core>
  <inPar/>
</task>
<task>
  <name>_task_worker_10</name>
  <inFunction>main</inFunction>
  <parent>_task_7</parent>
  <calledFunction>worker</calledFunction>
  <tile>tile[1]</tile>
  <core>11</core>
  <inPar/>
</task>
<task>
  <name>_task_worker_11</name>
  <inFunction>main</inFunction>
  <parent>_task_7</parent>
  <calledFunction>worker</calledFunction>
  <tile>tile[1]</tile>
  <core>12</core>
  <inPar/>
</task>
<connection>
  <ends>
    <end task="_task_i2c_master_0" type="server"/>
    <end task="_task_orientation_1" type="client"/>
  </ends>
    <index>0</index>
  <name>i2c</name>
   <interface>i2c_master_if</interface>
</connection>
<connection>
  <ends>
    <end task="_task_orientation_1" type="chan"/>
    <end task="_task_distributor_4" type="chan"/>
  </ends>
  <name>c_control</name>
</connection>
<connection>
  <ends>
    <end task="_task_DataInStream_2" type="chan"/>
    <end task="_task_distributor_4" type="chan"/>
  </ends>
  <name>c_inIO</name>
</connection>
<connection>
  <ends>
    <end task="_task_DataOutStream_3" type="chan"/>
    <end task="_task_distributor_4" type="chan"/>
  </ends>
  <name>c_outIO</name>
</connection>
<connection>
  <ends>
    <end task="_task_distributor_4" type="chan"/>
    <end task="_task_buttonListener_5" type="chan"/>
  </ends>
  <name>buttonToDist</name>
</connection>
<connection>
  <ends>
    <end task="_task_distributor_4" type="chan"/>
    <end task="_task_showLEDs_6" type="chan"/>
  </ends>
  <name>distToLED</name>
</connection>
<connection>
  <ends>
    <end task="_task_distributor_4" type="chan"/>
    <end task="_task_worker_8" type="chan"/>
  </ends>
    <index>0</index>
  <name>workers</name>
</connection>
<connection>
  <ends>
    <end task="_task_distributor_4" type="chan"/>
    <end task="_task_worker_9" type="chan"/>
  </ends>
    <index>1</index>
  <name>workers</name>
</connection>
<connection>
  <ends>
    <end task="_task_distributor_4" type="chan"/>
    <end task="_task_worker_10" type="chan"/>
  </ends>
    <index>2</index>
  <name>workers</name>
</connection>
<connection>
  <ends>
    <end task="_task_distributor_4" type="chan"/>
    <end task="_task_worker_11" type="chan"/>
  </ends>
    <index>3</index>
  <name>workers</name>
</connection>
</taskgraph>
